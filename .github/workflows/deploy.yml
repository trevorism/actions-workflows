name: Deploy App to GCP

on:
  workflow_call:
    inputs:
      gcp_project:
        description: 'The project on GCP which is the deploy target. Should be of the format: trevorism-<xyz>'
        required: true
        type: string
      gcp_project_id:
        description: 'The GCP project id. Should be of the format: 123456789'
        required: true
        type: string
      version:
        description: 'Version of app to deploy, in dash form (e.g. 1-3-2)'
        required: true
        type: string
      JDK_VERSION:
        required: false
        type: string
        default: '8'
    secrets:
      CLIENT_ID:
        required: false
      CLIENT_SECRET:
        required: false
      SIGNING_KEY:
        required: true
      TOKEN:
        required: false
      ACCESS_TOKEN:
        required: false
      API_KEY:
        required: false
      API_SECRET:
        required: false
      ENCRYPTION_KEY:
        required: false

permissions: write-all

jobs:
  deliver:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK ${{inputs.JDK_VERSION}}
        uses: actions/setup-java@v3
        with:
          java-version: ${{inputs.JDK_VERSION}}
          distribution: 'adopt'
          cache: 'gradle'

      - name: Chmod gradlew
        run: chmod +x ./gradlew

      - name: Auth with google
        uses: 'google-github-actions/auth@v0.8.1'
        with:
          service_account: ${{ format('github-{0}@{0}.iam.gserviceaccount.com', inputs.gcp_project ) }}
          workload_identity_provider: ${{ format('projects/{0}/locations/global/workloadIdentityPools/github-{1}-pool/providers/{1}-provider', inputs.gcp_project_id, inputs.gcp_project) }}

      - name: Create directory
        shell: bash
        run: mkdir -p ./src/main/resources

      - name: Create secrets file
        uses: Amadevus/pwsh-script@v2
        id: script
        with:
          script: |
            Add-Content -Path .\src\main\resources\secrets.properties -Value 'clientId=${{ secrets.CLIENT_ID }}'
            Add-Content -Path .\src\main\resources\secrets.properties -Value 'clientSecret=${{ secrets.CLIENT_SECRET }}'
            Add-Content -Path .\src\main\resources\secrets.properties -Value 'signingKey=${{ secrets.SIGNING_KEY }}'
            Add-Content -Path .\src\main\resources\secrets.properties -Value 'token=${{ secrets.TOKEN }}'
            Add-Content -Path .\src\main\resources\secrets.properties -Value 'accessToken=${{ secrets.ACCESS_TOKEN }}'
            Add-Content -Path .\src\main\resources\secrets.properties -Value 'apiKey=${{ secrets.API_KEY }}'
            Add-Content -Path .\src\main\resources\secrets.properties -Value 'apiSecret=${{ secrets.API_SECRET }}'
            Add-Content -Path .\src\main\resources\secrets.properties -Value 'encryptionKey=${{ secrets.ENCRYPTION_KEY }}'
            
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: clean appengineStage

      - name: 'Deploy to App Engine'
        uses: 'google-github-actions/deploy-appengine@v0.8.0'
        with:
          working_directory: "build/staged-app"
          deliverables: 'app.yaml'
          promote: true
          version: ${{ inputs.version }}

      - name: Commit version bump
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Bump gradle.properties'
          branch: 'master'
          push_options: '--force'